区間[a, b]で関数funcをシンプソンの公式に従って数値積分する関数simpsonがある。
区間の分割数numDiv ( = 2n) としたとき、プログラム中の [code] に入る適切なCコードを選択肢から1つ選べ

double simpson(double a, double b, int numDiv, double (*func)(double x))
{
　double h, integ=0.0;
　int k,n;
 
　/* ステップ幅 */
　h = (b - a) / numDiv;
　n = numDiv / 2;

　/* シンプソンの公式*/
　for (k = 0; k < n-1 ; k++)
　{
　　[code];
　}
　integ += 4 * (*func)(a + (numDiv - 1)*h) + (*func)(a) + (*func)(b);
　integ *= h / 3.0;

　return integ;

}


選択肢
(a) integ = h / 3.0 * ((*func)(a + 2*k*h) + 4 * (*func)(a + (2*k + 1)*h) + (*func)(a + (2*k + 2)*h));
(b) integ += h / 3.0 * ((*func)(a + 2*k*h) + 4 * (*func)(a + (2*k + 1)*h) + (*func)(a + (2*k + 2)*h));
(c) integ = 4 * (*func)(a + (2*k + 1)*h) + 2 *(*func)(a + (2*k + 2)*h)
(d) integ += 4 * (*func)(a + (2*k + 1)*h) + 2 *(*func)(a + (2*k + 2)*h)

選択された解答 :	
不正解 [指定なし]
正解 :	
評価方法	正解	大文字小文字の区別の設定
正解パターン一致	(\()?d(\))?

この式は、a から b までの間を numDiv で分割した区間内の積分計算を行う際に、Simpsonの1/3則を用いて4点・2点法を実装しています。
a + (2*k + 1)*h の部分では、区間 [a, b]を numDiv 分割して、それぞれの領域へ関数 func を適応しています。
4 * (*func)(a + (2*k + 1)*h) + 2 *(*func)(a + (2*k + 2)*h) は、 a + (2*k + 1)*h と (2*k + 2)*h の２点を用いて func を評価して、ステップの合成公式を利用しています。
---------------



不正解	
N元連立1次方程式Ax=bを反復法によって解きたい。
以下のガウス・ザイデル法の1回の更新処理コード中[ ]に入る適切なコードをそれぞれ以下から選び記号で答えよ。
ただし、行列Aは配列aに、ベクトルxおよびbはそれぞれ配列x、bに格納するとし、xnはxと同サイズの配列である。

for (i=1; i<= N; i++)
{
　xn[i] = b[i];
　for(j = 1; j < i; j++)
　{
　　[code1]
　}
　for(j = i+1; j <= N; j++)
　{
　　[code2]
　}
　[code3]
}

候補
(a) xn[i] += a[i][i]*x[j];
(b) xn[i] -= a[i][i]*x[j];
(c) xn[i] += a[i][i]*xn[j];
(d) xn[i] -= a[i][i]*xn[j];
(e) xn[i] += a[i][j]*x[j];
(f) xn[i] -= a[i][j]*x[j];
(g) xn[i] += a[i][j]*xn[j];
(h) xn[i] -= a[i][j]*xn[j];
(i) xn[i] *= a[i][i];
(j) xn[i] /= a[i][i];
(k) xn[i] *= a[i][j];
(l) xn[i] /= a[i][j]; 







指定された解答 : code1	
不正解[指定なし]
指定された解答 : code2	
不正解[指定なし]
指定された解答 : code3	
不正解[指定なし]
正解 : code1
評価方法	正解	大文字小文字の区別の設定
正解パターン一致	(\()?h(\))?	
正解 : code2
評価方法	正解	大文字小文字の区別の設定
正解パターン一致	(\()?f(\))?	
正解 : code3
評価方法	正解	大文字小文字の区別の設定
正解パターン一致	(\()?j(\))?	
質問 10